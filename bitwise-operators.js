//Почему побитовые операции в примерах ниже не меняют число? Что они делают внутри?

/* При побитовом сравнении 32битных чисел в двоичной системе исчисления 
00000000000000000000000001111011 ( 123 в десятичной ) и
00000000000000000000000000000000 ( 0 в десятичной ) 
оператор "^" для конечного значения присваивает значения по следующему принципу:
0 ^ 0 = 0
0 ^ 1 = 1
1 ^ 0 = 1
1 ^ 1 = 0
так как в двоичном 0 нет 1,  при любой позиции этого операнда в этом сравнении и любом значении второго операнда ответ всегда 
будет равен операнду второму операнду не равному 0
*/
alert( 123 ^ 0 ); 
alert( 0 ^ 123 ); // 123

/*
Побитовый оператор "~" НЕ примененный два раза подряд к одному числу заменяет его 0 на 1 и сразу же наоборот:
00000000000000000000000001111011 ( 123 в десятичной ) заменяется на 11111111111111111111111110000100 ( 4294967172 в десятичной ) и наоборот
11111111111111111111111110000100 ( 4294967172 в десятичной ) заменяется на 00000000000000000000000001111011 ( 123 в десятичной )
таким образом итоговый результат не изменяется
*/ 
alert( ~~123 ); // 123